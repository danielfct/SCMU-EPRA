----------
localhost/api/get_alarminfo.php

Devolve objeto do tipo:
 {"estadoAtual":"1","ativoDesde":"2018-05-15 13:54:25","dataAtual":"2018-05-15 12:56:54","intensidade":"3000","intervalo":"2","tempoDeToque":"3"}
estadoAtual: 0 = alarme desligado; 1 = ligado
ativoDesde: data e hora em que foi ligado
dataAtual: data e hora atuais do sistema (para usar no calculo do tempo de atividade do ecra principal)
intensidade, intervalo e tempoDeToque - para mostrar nas settings do alarme

ou devolve {"message": "..."} se nao existir alarme na tabela
--------------------
localhost/api/post_alarminfo.php

Pode receber dois tipos de objetos:
a) para alterar o estado do sistema (on/off), 0 = off; 1 = on
{
"estadoAtual": "0"
}
b) para alterar as configs do alarme
{
"intensidade": "1000",
"intervalo": "5",
"tempoDeToque": "10"
}

NOTA: NAO ENVIAR ESTES DOIS TIPOS AOS MESMO TEMPO, SE NAO SAO AS CONFIGS VAO SER ATUALIZADAS!
NOTA2: obrigar a que tempoDeToque e intensidade sejam sempre > 0

Devolve objeto do tipo: {"message": "Alarm settings were updated.", "success": "1"}

----------------
localhost/api/post_history.php

Recebe objeto do tipo : {"evento":"Alarme disparado."}
Devolve objeto do tipo: {"message":"msg", "success","s"}, com msg= History saved successfully ou Unable to save history, e s = 0 ou 1 (0 = erro; 1 = sucesso).

----------------------------
localhost/api/get_history.php

Devolve array de objetos do tipo:
[{"id":"1","evento":"eventoExemplo","datahora":"2018-05-15 12:55:38"}]

ou devolve {"message": "..."} se nao existir historico
---------------------------
localhost/api/get_areas.php

Devolve um array de objetos do tipo:
[{"id":"1","nome":"areaTeste","alarmeLigado":"0","sensor":"led1"}]

ou devolve {"message": "..."} se nao existirem areaTeste

localhost/api/get_areas.php?id=IdDaArea

Devolve um objeto do tipo:
{"id":"1","nome":"areaTeste","alarmeLigado":"0","sensor":"led1"}

ou devolve {"message":"No areas found."} se nao existerem areas

----------------------------------
localhost/api/post_areas.php (Criar nova area)

Recebe um objeto do tipo:
{"nome": "nomeArea","alarmeLigado": "0","sensor": "led1"}
Devolve um objeto do tipo:
{ "message": "Area saved successfully!", "success": "1"}
ou { "message": "Unable to save area.", "success": "0"} se existir erro

NOTA: o nome do sensor tem que existir na tabela de sensores
Nota2: O nome da area a criar tem que ser unico na tabela
-------------------------------
localhost/api/update_areas.php

Recebe um objeto do tipo:
{"id": "1","nome": "nomeArea","alarmeLigado": "0","sensor": "led1"}
sendo id o id da area a atualizar e nome, alarmeLigado e sensor as colunas a mudar

Devolve um objeto do tipo:
{"message": "Area updated successfully!","success": "1"} ou
{"message": "Unable to update area.","success": "0"} se houver erro

Nota: O nome da area a atualizar tem que ser unico na tabela
-------------------------------------
localhost/api/get_simulators.php

Devolve uma lista de objetos do tipo:
[{"id":"1","nome":"nomeS","estadoAtual":"0","areaId":"1"}]
ou devolve {"message":"No simulators found."} se nao existerem simuladores

localhost/api/get_simulators.php?search=x (procura por simuladores que contenham x no nome)
Devolve uma lista igual a de cima ou a mensagem de q nao existem.
-------------------------------------
localhost/api/post_simulators.php (cria simuladores)

Recebe objeto do tipo:
{"nome": "simName","estadoAtual": "1","atuador": "led1","areaId": "6"}
Nota: o atuador e areaId tem que existir, caso contrario da erro
NOTA2: O nome do simulador tem que ser unico
devolve {"message": "Unable to create simulator.","success": "0"} ou
{"message": "Simulator created!","success": "1"}

------------------------
localhost/api/update_simulators.php

Recebe objeto do tipo:
{"id": "1","nome": "simi23dff","estadoAtual": "0","atuador": "led12","areaId": "1"}
devolve {"message": "Unable to update simulator.","success": "0"} ou
{"message": "Simulator updated!","success": "1"}
-------------------------------------

localhost/api/delete_simulators.php

Recebe objeto do tipo: {"id": "1"}
Devolve mensagem {"message": "Simulator was deleted.","success": "1"}

-----------------------------
  localhost/api/get_contacts.php
  ou localhost/api/get_contacts.php?search=x (Onde x e o nome da pessoa a ser pesquisada)

Devolve lista de objs to tipo:
[{"nome":"admL","telemovel":"966666666","email":"adm@adm.com","password":"admPWD","admin":"1","privilegios":"1,7,9"}]

-----------------------------
localhost/api/delete_contacts.php

Recebe objeto do tipo:
{"email": "jn@ff.com"}
Retorna obj:
{"message": "User was deleted.","success": "1"}
-------------------------------
localhost/api/update_user.php

Recebe objeto do tipo:
{"email": "email@email.com","privilegios": "1,7,9","nome": "defeffefedef","telemovel": "93de343fe38"}
NOTA: privilegios, nome e telemovel s√£o opcionais, mas pelo menos um deles tem que estar no objeto enviado
NOTA2: telemovel tem que ser unico
Retorna obj:
{"message": "User was updated.","success": "1"}
------------------------------------
localhost/api/post_tracking.php

Recebe objeto do tipo:
{
	"areaAtual": "1",
	"areaEntrada": "2",
	"pessoasNotificadas": "0"
}
NOTA: pessoasNotificadas e opcional

Retorna obj:
{"message": "Tracking created!","success": "1"}
ou Retorna obj:
{"message": "Unable to create tracking.","success": "0"}
---------------------------------------------
localhost/api/post_historyTracking.php (cria historico de movimento associado a uma intrusao / a um tracking)

Recebe objeto do tipo:
{
	"area": "1",
	"duracao": "7",
	"trackingId": "1"
}

Retorna obj:
{"message": "HistoryTracking created!","success": "1"}
ou Retorna obj:
{"message": "Unable to create historyTracking.","success": "0"}
----------------------------------------
localhost/api/get_historyTracking.php?id=x (x e o id de um tracking)

Retorna lista de objs do tipo:
[{"id":"1","areaAtual":"1","areaEntrada":"1","pessoasNotificadas":"0","area":"1","duracao":"7","trackingId":"1"}]
ou {"message": "Missing parameter id.", "success": "0"}
ou {"message":"No tracking found."}
